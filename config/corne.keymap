/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0

/ {
    behaviors {
        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COMMA";
            bindings =
                <&kp PERIOD>,
                <&kp COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        vim_i: vim_i {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_I";
            bindings =
                <&to 0>,
                <&vim_I>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        vim_o: vim_o {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_O";
            bindings =
                <&kp ENTER>,
                <&vim_O>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        vim_g: vim_g {
            compatible = "zmk,behavior-tap-dance";
            label = "VIM_G";
            #binding-cells = <0>;
            tapping-term-ms = <100>;
            bindings =
                <&vim_S_G>,
                <&kp HOME>;
        };
        vim_c_r: vim_c_r {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_C_R";
            bindings =
                <&none>,
                <&kp LG(LS(Z))>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
        vim_S_G: vim_S_G {
            compatible = "zmk,behavior-mod-morph";
            label = "VIM_S_G";
            bindings =
                <&none>,
                <&kp END>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        aacute: aacute {
            compatible = "zmk,behavior-macro";
            label = "AACUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A>;
        };
        eacute: eacute {
            compatible = "zmk,behavior-macro";
            label = "EACUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
        };
        iacute: iacute {
            compatible = "zmk,behavior-macro";
            label = "IACUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp I>;
        };
        oacute: oacute {
            compatible = "zmk,behavior-macro";
            label = "OACUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp O>;
        };
        uacute: uacute {
            compatible = "zmk,behavior-macro";
            label = "UACUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp U>;
        };
        acirc: acirc {
            compatible = "zmk,behavior-macro";
            label = "ACIRC";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp A>;
        };
        ecirc: ecirc {
            compatible = "zmk,behavior-macro";
            label = "ECIRC";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
        };
        icirc: icirc {
            compatible = "zmk,behavior-macro";
            label = "ICIRC";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp I>;
        };
        ocirc: ocirc {
            compatible = "zmk,behavior-macro";
            label = "OCIRC";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
        };
        ucirc: ucirc {
            compatible = "zmk,behavior-macro";
            label = "UCIRC";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp U>;
        };
        atilde: atilde {
            compatible = "zmk,behavior-macro";
            label = "ATILDE";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp A>;
        };
        otilde: otilde {
            compatible = "zmk,behavior-macro";
            label = "OTILDE";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp O>;
        };
        ao: ao {
            compatible = "zmk,behavior-macro";
            label = "AO";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp A &kp O>;
        };
        oes: oes {
            compatible = "zmk,behavior-macro";
            label = "OES";
            #binding-cells = <0>;
            bindings = <&kp LA(N) &kp O &kp E &kp S>;
        };
        vim_word: vim_word {
            compatible = "zmk,behavior-macro";
            label = "VIM_WORD";
            #binding-cells = <0>;
            bindings = <&kp LA(RIGHT) &kp LA(RIGHT) &kp LA(LEFT)>;
        };
        vim_O: vim_O {
            compatible = "zmk,behavior-macro";
            label = "VIM_O";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT) &kp ENTER &kp LEFT>;
        };
        vim_dw: vim_dw {
            compatible = "zmk,behavior-macro";
            label = "VIM_DW";
            #binding-cells = <0>;
            bindings = <&vim_word &kp LA(BACKSPACE) &kp DELETE>;
        };
        vim_I: vim_I {
            compatible = "zmk,behavior-macro";
            label = "VIM_I";
            #binding-cells = <0>;
            bindings = <&kp LG(LEFT_ARROW) &to 0>;
        };
        vim_dd: vim_dd {
            compatible = "zmk,behavior-macro";
            label = "VIM_DD";
            #binding-cells = <0>;
            bindings = <&kp LG(RIGHT) &kp LG(BACKSPACE)>;
        };
        vim_dk: vim_dk {
            compatible = "zmk,behavior-macro";
            label = "VIM_DK";
            #binding-cells = <0>;
            bindings = <&vim_dd &kp UP_ARROW &vim_dd>;
        };
        vim_dj: vim_dj {
            compatible = "zmk,behavior-macro";
            label = "VIM_DJ";
            #binding-cells = <0>;
            bindings = <&vim_dd &vim_dd>;
        };
        vim_cw: vim_cw {
            compatible = "zmk,behavior-macro";
            label = "VIM_CW";
            #binding-cells = <0>;
            bindings = <&vim_dw &to 0>;
        };
        vim_cc: vim_cc {
            compatible = "zmk,behavior-macro";
            label = "VIM_CC";
            #binding-cells = <0>;
            bindings = <&vim_dd &to 0>;
        };
        vim_ck: vim_ck {
            compatible = "zmk,behavior-macro";
            label = "VIM_CK";
            #binding-cells = <0>;
            bindings = <&vim_dk &to 0>;
        };
        vim_cj: vim_cj {
            compatible = "zmk,behavior-macro";
            label = "VIM_CJ";
            #binding-cells = <0>;
            bindings = <&vim_dj &to 0>;
        };
        vim_ch: vim_ch {
            compatible = "zmk,behavior-macro";
            label = "VIM_CH";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE &to 0>;
        };
        vim_cl: vim_cl {
            compatible = "zmk,behavior-macro";
            label = "VIM_CL";
            #binding-cells = <0>;
            bindings = <&kp DELETE &to 0>;
        };
        aes: aes {
            compatible = "zmk,behavior-macro";
            label = "AES";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp A &kp E &kp S>;
        };
    };

    combos {
        compatible = "zmk,combos";

        VIM_IN {
            bindings = <&to 6>;
            key-positions = <13 16 19 14 15 20 21 22>;
        };

        VIM_OUT {
            bindings = <&to 0>;
            key-positions = <14 13 15 16 19 20 21 22>;
        };

        toggle_shift {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 19>;
        };

        cmd_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <15 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
&none        &kp Q       &kp W        &lt 2 E      &lt 1 R   &lt 12 T            &lt 9 Y      &lt 2 U        &lt 1 I       &kp O                &kp P  &none
&none  &mt LCTRL A  &mt LALT S     &mt LGUI D  &mt LSHFT F    &lt 4 G            &lt 5 H  &mt RSHFT J     &mt RGUI K  &mt RALT L  &mt RCTRL SEMICOLON  &none
&none        &kp Z       &kp X          &kp C        &kp V      &kp B            &lt 3 N        &kp M      &kp COMMA     &kp DOT            &kp SLASH  &none
                                &lt 11 ESCAPE  &lt 6 SPACE  &lt 5 TAB    &lt 6 BACKSPACE  &lt 4 ENTER  &lt 10 DELETE
            >;
        };

        acute {
            bindings = <
&none   &trans  &trans  &eacute  &trans  &trans    &trans  &uacute  &iacute  &oacute  &trans  &none
&none  &aacute  &trans   &trans  &trans  &trans    &trans   &trans   &trans   &trans  &trans  &none
&none   &trans  &trans   &trans  &trans  &trans    &trans   &trans   &trans   &trans  &trans  &none
                         &trans  &trans  &trans    &trans   &trans   &trans
            >;

            label = "acute";
        };

        circ {
            bindings = <
&none  &trans  &trans  &ecirc  &trans  &trans    &trans  &ucirc  &icirc  &ocirc  &trans  &none
&none  &acirc  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &none
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "circ";
        };

        tilde {
            bindings = <
&none   &trans  &trans     &trans  &trans  &trans    &trans     &trans  &trans    &oes  &trans  &none
&none  &atilde     &ao       &aes  &trans  &trans    &trans     &trans  &trans  &trans  &trans  &none
&none   &trans  &trans  &kp LA(C)  &trans  &trans    &trans  &kp TILDE  &trans  &trans  &trans  &none
                           &trans  &trans  &trans    &trans     &trans  &trans
            >;
        };

        numpad {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans        &kp STAR  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9    &kp PLUS  &none
&none  &trans  &trans  &trans  &trans  &trans       &kp SLASH  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6   &kp MINUS  &none
&none  &trans  &trans  &trans  &trans  &trans    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &dot_comma  &none
                       &trans  &trans  &trans          &trans     &kp EQUAL        &trans
            >;
        };

        symbols {
            bindings = <
&none  &kp EXCLAMATION    &kp AT_SIGN          &kp HASH            &kp DOLLAR            &kp PERCENT    &trans  &trans  &trans  &trans  &trans  &none
&none        &kp CARET  &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans  &trans  &trans  &trans  &trans  &none
&none        &kp MINUS      &kp EQUAL  &kp LS(NUMBER_2)      &kp LEFT_BRACKET               &kp RBKT    &trans  &trans  &trans  &trans  &trans  &none
                                                 &trans                &trans                 &trans    &trans  &trans  &trans
            >;

            label = "symbols";
        };

        VIM {
            bindings = <
&none  &none   &vim_word  &kp LA(RIGHT)           &none   &none    &kp LG(C)  &kp LG(Z)        &to 0  &vim_o  &kp LG(V)  &none
&none  &to 0       &none          &to 8           &none  &vim_g        &none      &none        &none   &none      &none  &none
&none  &none  &kp DELETE          &to 7  &kt LEFT_SHIFT   &none        &none      &none  &key_repeat   &none      &none  &none
                                 &trans           &to 0   &none       &trans     &trans       &trans
            >;
        };

        vim_change {
            bindings = <
&none  &none  &vim_cw    &none  &none  &none      &none    &none    &none    &none  &none  &none
&none  &none    &none    &none  &none  &none    &vim_ch  &vim_cj  &vim_ck  &vim_cl  &none  &none
&none  &none    &none  &vim_cc  &none  &none      &none    &none    &none    &none  &none  &none
                         &none  &none  &none      &none    &none    &none
            >;
        };

        VIM_DELETE {
            bindings = <
&none  &none  &vim_dw  &kp LA(DELETE)  &none              &none            &none    &none    &none       &none  &none  &none
&none  &none    &none           &none  &none              &none    &kp BACKSPACE  &vim_dj  &vim_dk  &kp DELETE  &none  &none
&none  &none    &none           &none  &none  &kp LA(BACKSPACE)            &none    &none    &none       &none  &none  &none
                                &none  &none              &none            &none    &none    &none
            >;
        };

        FN_R {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans     &none  &kp F7  &kp F8  &kp F9     &kp F11    &bt BT_CLR
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6     &kp F12  &bt BT_SEL 0
&none  &trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &kp K_LOCK  &bt BT_SEL 1
                       &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        MEDIA_R {
            bindings = <
&none  &trans  &trans  &trans  &trans  &trans        &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC   &none  &none
&none  &trans  &trans  &trans  &trans  &trans        &trans          &kp C_VOL_DN             &kp C_MUTE          &kp C_VOL_UP  &trans  &none
&none  &trans  &trans  &trans  &trans  &trans        &trans            &kp C_PREV            &kp C_PAUSE            &kp C_NEXT  &trans  &none
                       &trans  &trans  &trans    &bt BT_CLR          &bt BT_SEL 1           &bt BT_SEL 0
            >;
        };

        MEDIA_L {
            bindings = <
&none  &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_AUTO  &kp C_BRIGHTNESS_INC   &none    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans          &kp C_VOL_DN             &kp C_MUTE          &kp C_VOL_UP  &trans    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans            &kp C_PREV            &kp C_PAUSE            &kp C_NEXT  &trans    &trans  &trans  &trans  &trans  &trans  &none
                                                    &trans                &trans  &trans    &trans  &trans  &trans
            >;
        };

        FN_L {
            bindings = <
&none  &trans  &kp F7        &kp F8        &kp F9     &kp F11    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &kp F4        &kp F5        &kp F6     &kp F12    &trans  &trans  &trans  &trans  &trans  &none
&none  &trans  &kp F1        &kp F2        &kp F3  &kp K_LOCK    &trans  &trans  &trans  &trans  &trans  &none
                       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &trans  &trans  &trans
            >;
        };
    };
};
